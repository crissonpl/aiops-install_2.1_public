---
# Source: ibm-watson-aiops-dev-install/templates/00-secure-gateway-acl-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: aiops-dev-test-aiopsdev-secure-gateway
  namespace: default
  labels:
    app.kubernetes.io/name: "aiopsDev"
    helm.sh/chart: "ibm-watson-aiops-dev-install"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "aiops-dev-test"
    release: "aiops-dev-test"
    app.kubernetes.io/component: "secure-gateway"
data:
  gateway_acl.list: "acl allow :"
---
# Source: ibm-watson-aiops-dev-install/templates/70-secure-gateway-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aiops-dev-test-aiopsdev-secure-gateway
  namespace: default
  labels:
    app.kubernetes.io/name: "aiopsDev"
    helm.sh/chart: "ibm-watson-aiops-dev-install"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "aiops-dev-test"
    release: "aiops-dev-test"
    app.kubernetes.io/component: "secure-gateway"
spec:
  replicas: 1
  revisionHistoryLimit: 25
  selector:
    matchLabels:
      app.kubernetes.io/name: "aiopsDev"
      helm.sh/chart: "ibm-watson-aiops-dev-install"
      app.kubernetes.io/managed-by: "Helm"
      app.kubernetes.io/instance: "aiops-dev-test"
      release: "aiops-dev-test"
      app.kubernetes.io/component: "secure-gateway"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "aiopsDev"
        helm.sh/chart: "ibm-watson-aiops-dev-install"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/instance: "aiops-dev-test"
        release: "aiops-dev-test"
        app.kubernetes.io/component: "secure-gateway"
    spec:
      hostIPC: false
      hostNetwork: false
      hostPID: false
      securityContext:
        runAsNonRoot: true
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
      
      containers:
      - name: "secure-gateway"
        image: ibmcom/secure-gateway-client:latest
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
        envFrom:
        - secretRef:
            name: ibm-secure-gateway
        command:
        - node
        - lib/secgwclient.js
        args:
        - $(GATEWAY_ID)
        - --gateway=https://sgmanager.us-south.securegateway.cloud.ibm.com
        - --sectoken=$(GATEWAY_TOKEN)
        - --aclfile=/acl/gateway_acl.list
        - --loglevel=DEBUG
        - --noUI
        volumeMounts:
        - mountPath: /acl
          name: acl
      volumes:
      - name: acl
        configMap:
          name: aiops-dev-test-aiopsdev-secure-gateway
---
# Source: ibm-watson-aiops-dev-install/templates/10-secure-gateway-destination-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "aiops-dev-test-aiopsdev-create-sg-destination"
  namespace: default
  labels:
    app.kubernetes.io/name: "aiopsDev"
    helm.sh/chart: "ibm-watson-aiops-dev-install"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "aiops-dev-test"
    release: "aiops-dev-test"
    app.kubernetes.io/component: "create-sg-destination"
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "10"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  backoffLimit: 5
  activeDeadlineSeconds: 300
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "aiopsDev"
        helm.sh/chart: "ibm-watson-aiops-dev-install"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/instance: "aiops-dev-test"
        release: "aiops-dev-test"
        app.kubernetes.io/component: "create-sg-destination"
      name: secret-gen
    spec:
      serviceAccountName: cpd-admin-sa
      hostIPC: false
      hostNetwork: false
      hostPID: false
      securityContext:
        runAsNonRoot: true
      restartPolicy: Never
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
      containers:
      - name: cred-gen
        image: linkyard/kubectl:latest
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
        envFrom:
          - secretRef:
              name: ibm-secure-gateway
        command:
        - "/bin/bash"
        - -c
        - |
          set -e
          DESTINATION=$(curl -X POST \
            -H "Authorization: Bearer ${GATEWAY_TOKEN}" \
            -H 'Content-Type: application/json' \
            -d '{ "desc": "Helm: aiops-dev-test", "ip": "ibm-nginx-svc.zen.svc.cluster.local", "port": "443", "protocol": "HTTPS", "enable_client_tls": true, "client_tls": "none", "tls": "serverside", "rejectUnauth": false }' \
            "https://sgmanager.us-south.securegateway.cloud.ibm.com/v1/sgconfig/${GATEWAY_ID}/destinations")

          DESTINATION_ID=$(echo $DESTINATION | jq ._id)

          kubectl delete -n zen --ignore-not-found=true configmap aiops-dev-test-securegateway-destination
          cat <<EOF | kubectl create -n zen -f -
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: "aiops-dev-test-securegateway-destination"
            labels:
              waiopsSecureGatewayDestination: "true"
              app.kubernetes.io/name: "aiopsDev"
              helm.sh/chart: "ibm-watson-aiops-dev-install"
              app.kubernetes.io/managed-by: "Helm"
              app.kubernetes.io/instance: "aiops-dev-test"
              release: "aiops-dev-test"
              app.kubernetes.io/component: "aiops-dev-test-securegateway-destination"
          data:
            DESTINATION_ID: '$(echo -n $DESTINATION_ID)'
            DESTINATION_CONFIG: '$(echo -n $DESTINATION)'
          EOF
